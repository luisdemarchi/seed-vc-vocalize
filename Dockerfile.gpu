FROM nvidia/cuda:12.1.1-cudnn8-runtime-ubuntu22.04

ENV DEBIAN_FRONTEND=noninteractive \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    HF_HOME=/app/checkpoints/hf_cache \
    HF_HUB_CACHE=/app/checkpoints/hf_cache

## Install Python 3.12 on Ubuntu 22.04 (via deadsnakes) + essentials
RUN apt-get update && apt-get install -y --no-install-recommends \
    software-properties-common ca-certificates curl git ffmpeg \
    && add-apt-repository -y ppa:deadsnakes/ppa \
    && apt-get update && apt-get install -y --no-install-recommends \
    python3.12 python3.12-venv python3.12-distutils \
    && rm -rf /var/lib/apt/lists/*

# Make python3 point to python3.12
RUN ln -sf /usr/bin/python3.12 /usr/bin/python3

# Bootstrap pip for Python 3.12
RUN curl -sS https://bootstrap.pypa.io/get-pip.py -o /tmp/get-pip.py \
    && python3 /tmp/get-pip.py \
    && rm -f /tmp/get-pip.py

WORKDIR /app

## Copy requirements first to leverage build cache
COPY requirements.txt /app/requirements.txt

# Create venv (Python 3.12) and upgrade pip/setuptools/wheel
RUN python3 -m venv /opt/venv && . /opt/venv/bin/activate \
    && pip install --upgrade pip wheel setuptools

## Install PyTorch (CUDA 12.1) matching requirements-py313 (kept separate to avoid CPU wheels)
RUN . /opt/venv/bin/activate \
    && pip install --extra-index-url https://download.pytorch.org/whl/cu121 \
       torch==2.8.0 torchvision==0.23.0 torchaudio==2.8.0

## Install the rest of Python dependencies (non-torch). Ensure torch is not specified inside requirements.txt to avoid conflicts.
RUN . /opt/venv/bin/activate \
    && pip install --no-cache-dir -r /app/requirements.txt

# Copy the project
COPY . /app

# Set venv on PATH
ENV PATH="/opt/venv/bin:$PATH"

# Prepare runtime dirs
RUN mkdir -p /app/output /app/cache /app/checkpoints/hf_cache

# Healthcheck (optional)
HEALTHCHECK --interval=60s --timeout=10s --retries=3 CMD python -c "import torch; print(torch.cuda.is_available())" || exit 1

# Default command (overridden by ECS Task Definition command)
CMD ["bash", "-lc", "python --version && python inference.py --help"]
